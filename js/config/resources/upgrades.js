// Upgrades configuration extracted from app.js
// This contains all upgrade items, their properties, and requirements

// Helper function for price calculations (e.g.,e(1, 12) = 1 * 10^12 = 1,000,000,000,000)
const calculateUpgradePrice = (base, multiplier) => {
  return base * Math.pow(10, multiplier);
};

const upgrades = {
  layout: [
    { name: "Conveyor", iconX: 1, iconY: 0, items: ["packageSize"] },
    { name: "Research center", iconX: 3, iconY: 3, items: ["analystCenterConvertMore", "researchCenterBonus", "researchCenterMaxStock"] },
    { name: "Garbage", iconX: 2, iconY: 3, items: ["garbageRemoveAmount"] },
    { type: "break" },
    { type: "break" },
    { name: "Iron buyer", iconX: 2, iconY: 0, items: ["ironBuyerBuyAmount"] },
    { name: "Coal buyer", iconX: 5, iconY: 0, items: ["coalBuyerRunningCost", "_", "coalBuyerBuyAmount"] },
    { name: "Oil buyer", iconX: 8, iconY: 0, items: ["oilBuyerRunningCost", "_", "oilBuyerBuyAmount"] },
    { name: "Gas buyer", iconX: 0, iconY: 3, items: ["gasBuyerRunningCost", "_", "gasBuyerBuyAmount"] },
    { name: "Silicon buyer", iconX: 1, iconY: 1, items: ["siliconBuyerRunningCost", "_", "siliconBuyerBuyAmount"] },
    { name: "Explosives buyer", iconX: 7, iconY: 1, items: ["explosivesBuyerRunningCost", "_", "explosivesBuyerBuyAmount"] },
    { name: "Aluminium buyer", iconX: 4, iconY: 1, items: ["aluminiumBuyerRunningCost", "_", "aluminiumBuyerBuyAmount"] },
    { type: "break" },
    { type: "break" },
    { name: "Iron foundry", iconX: 3, iconY: 0, items: ["ironFoundryConvertAmount"] },
    { name: "Steel foundry", iconX: 6, iconY: 0, items: ["steelFoundryConvertMoreAmount", "_", "steelFoundryRunningCost", "_", "steelFoundryConvertAmount"] },
    { name: "Plastic maker", iconX: 9, iconY: 0, items: ["plasticMakerConvertMoreAmount", "_", "plasticMakerRunningCost", "_", "plasticMakerConvertAmount"] },
    { name: "Electronics maker", iconX: 2, iconY: 1, items: ["electronicsMakerConvertMoreAmount", "_", "electronicsMakerRunningCost", "_", "electronicsMakerConvertAmount"] },
    { name: "Bullet maker", iconX: 8, iconY: 1, items: ["bulletMakerRunningCost", "_", "bulletMakerConvertAmount"] },
    { name: "Gun maker", iconX: 9, iconY: 1, items: ["gunMakerRunningCost", "_", "gunMakerConvertAmount"] },
    { name: "Engine maker", iconX: 5, iconY: 1, items: ["engineMakerRunningCost", "_", "engineMakerConvertAmount"] },
    { name: "Tank hull maker", iconX: 1, iconY: 2, items: ["tankHullMakerRunningCost", "_", "tankHullMakerConvertAmount"] },
    { name: "Tank turret maker", iconX: 2, iconY: 2, items: ["tankTurretMakerRunningCost", "_", "tankTurretMakerConvertAmount"] },
    { name: "Tank assembler", iconX: 3, iconY: 2, items: ["tankAssemblerRunningCost", "_", "tankAssemblerConvertAmount"] },
    { name: "Diesel refinery", iconX: 5, iconY: 2, items: ["dieselRefineryRunningCost", "_", "dieselRefineryConvertAmount"] },
    { name: "Jet fuel refinery", iconX: 1, iconY: 3, items: ["jetFuelRefineryRunningCost", "_", "jetFuelRefineryConvertAmount"] },
    { name: "Rocket hull maker", iconX: 6, iconY: 2, items: ["rocketHullMakerRunningCost", "_", "rocketHullMakerConvertAmount"] },
    { name: "Rocket warhead maker", iconX: 7, iconY: 2, items: ["rocketWarheadMakerRunningCost", "_", "rocketWarheadMakerConvertAmount"] },
    { name: "Rocket assembler", iconX: 8, iconY: 2, items: ["rocketAssemblerRunningCost", "_", "rocketAssemblerConvertAmount"] },
    { type: "break" },
    { type: "break" },
    { name: "Iron seller", iconX: 4, iconY: 0, items: ["ironSellerSellPrice", "_", "ironSellerSellAmount"] },
    { name: "Steel seller", iconX: 7, iconY: 0, items: ["steelSellerSellPrice", "steelSellerRunningCost", "_", "steelSellerSellAmount"] },
    { name: "Plastic seller", iconX: 0, iconY: 1, items: ["plasticSellerSellPrice", "plasticSellerRunningCost", "_", "plasticSellerSellAmount"] },
    { name: "Electronics seller", iconX: 3, iconY: 1, items: ["electronicsSellerSellPrice", "electronicsSellerRunningCost", "_", "electronicsSellerSellAmount"] },
    { name: "Gun seller", iconX: 0, iconY: 2, items: ["gunSellerSellPrice", "gunSellerRunningCost", "_", "gunSellerSellAmount"] },
    { name: "Engine seller", iconX: 6, iconY: 1, items: ["engineSellerSellPrice", "engineSellerRunningCost", "_", "engineSellerSellAmount"] },
    { name: "Tank seller", iconX: 4, iconY: 2, items: ["tankSellerSellPrice", "tankSellerRunningCost", "_", "tankSellerSellAmount"] },
  ],
  upgrades: [{
    id: "packageSize",
    idNum: 66,
    iconX: 1,
    iconY: 0,
    requiresResearch: "engineComponents",
    type: "packageSize",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(1, 12), bonus: 1 },
        { price: calculateUpgradePrice(1, 14), bonus: 1 },
        { price: calculateUpgradePrice(1, 16), bonus: 1 },
    ],
},
{
    id: "ironBuyerBuyAmount",
    idNum: 1,
    iconX: 0,
    iconY: 0,
    type: "buyer",
    componentId: "ironBuyer",
    refund: 0.8,
    noRunningCost: !0,
    levels: [
        { price: calculateUpgradePrice(8, 2), bonus: 1 },
        { price: calculateUpgradePrice(8, 3), bonus: 2 },
        { price: calculateUpgradePrice(8, 4), bonus: 4 },
        { price: calculateUpgradePrice(5, 5), bonus: 4 },
        { price: calculateUpgradePrice(12, 9), bonus: 12 },
        { price: calculateUpgradePrice(1.5, 11), bonus: 12 },
        { price: calculateUpgradePrice(4, 13), bonus: 12 },
        { price: calculateUpgradePrice(60, 13), bonus: 16 },
        { price: calculateUpgradePrice(10, 14), bonus: 32 },
    ],
},
{
    id: "ironFoundryConvertAmount",
    idNum: 2,
    iconX: 1,
    iconY: 0,
    type: "converter",
    componentId: "ironFoundry",
    refund: 0.8,
    noRunningCost: !0,
    levels: [
        { price: calculateUpgradePrice(8, 2), bonus: 1 },
        { price: calculateUpgradePrice(8, 4), bonus: 2 },
        { price: calculateUpgradePrice(8, 5), bonus: 2 },
        { price: calculateUpgradePrice(7, 9), bonus: 6 },
        { price: calculateUpgradePrice(2, 11), bonus: 6 },
        { price: calculateUpgradePrice(6, 13), bonus: 6 },
        { price: calculateUpgradePrice(60, 13), bonus: 24 },
        { price: calculateUpgradePrice(20, 14), bonus: 48 },
    ],
},
{
    id: "ironSellerSellAmount",
    idNum: 3,
    iconX: 2,
    iconY: 0,
    type: "sellerSellAmount",
    componentId: "ironSeller",
    refund: 0.8,
    noRunningCost: !0,
    levels: [
        { price: calculateUpgradePrice(5, 2), bonus: 1 },
        { price: calculateUpgradePrice(2, 3), bonus: 2 },
    ],
},
{
    id: "ironSellerSellPrice",
    idNum: 4,
    iconX: 3,
    iconY: 0,
    type: "sellerSellPrice",
    componentId: "ironSeller",
    levels: [
        { price: calculateUpgradePrice(5, 2), bonus: 0.25 },
        { price: calculateUpgradePrice(4, 3), bonus: 0.25 },
    ],
},
{
    id: "coalBuyerBuyAmount",
    idNum: 5,
    iconX: 0,
    iconY: 0,
    requiresResearch: "steelComponents",
    type: "buyer",
    componentId: "coalBuyer",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(4, 4), bonus: 1 },
        { price: calculateUpgradePrice(18, 5), bonus: 2 },
        { price: calculateUpgradePrice(1, 9), bonus: 4 },
        { price: calculateUpgradePrice(6, 9), bonus: 4 },
        { price: calculateUpgradePrice(3, 11), bonus: 6 },
        { price: calculateUpgradePrice(12.5, 13), bonus: 6 },
    ],
},
{
    id: "steelFoundryConvertAmount",
    idNum: 7,
    iconX: 1,
    iconY: 0,
    requiresResearch: "steelComponents",
    type: "converter",
    componentId: "steelFoundry",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(15, 4), bonus: 1 },
        { price: calculateUpgradePrice(9, 5), bonus: 1 },
        { price: calculateUpgradePrice(6, 11), bonus: 3 },
        { price: calculateUpgradePrice(15, 13), bonus: 6 },
        { price: calculateUpgradePrice(25, 14), bonus: 12 },
    ],
},
{
    id: "steelFoundryConvertMoreAmount",
    idNum: 64,
    iconX: 1,
    iconY: 0,
    requiresResearch: "engineComponents",
    type: "converterProduceMore",
    componentId: "steelFoundry",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(4, 11), bonus: 1 },
        { price: calculateUpgradePrice(90, 13), bonus: 2 },
    ],
},
{
    id: "steelSellerSellAmount",
    idNum: 9,
    iconX: 2,
    iconY: 0,
    requiresResearch: "steelComponents",
    type: "sellerSellAmount",
    componentId: "steelSeller",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(5, 4), bonus: 1 },
        { price: calculateUpgradePrice(3, 5), bonus: 1 },
    ],
},
{
    id: "coalBuyerRunningCost",
    idNum: 6,
    iconX: 0,
    iconY: 0,
    requiresResearch: "steelComponents",
    type: "runningCost",
    componentId: "coalBuyer",
    levels: [
        { price: calculateUpgradePrice(2, 4), bonus: 0.05 },
        { price: calculateUpgradePrice(9, 4), bonus: 0.1 },
    ],
},
{
    id: "steelFoundryRunningCost",
    idNum: 8,
    iconX: 4,
    iconY: 0,
    requiresResearch: "steelComponents",
    type: "runningCost",
    componentId: "steelFoundry",
    levels: [
        { price: calculateUpgradePrice(3, 4), bonus: 0.05 },
        { price: calculateUpgradePrice(1, 5), bonus: 0.1 },
    ],
},
{
    id: "steelSellerRunningCost",
    idNum: 11,
    iconX: 4,
    iconY: 0,
    requiresResearch: "steelComponents",
    type: "runningCost",
    componentId: "steelSeller",
    levels: [
        { price: calculateUpgradePrice(10, 4), bonus: 0.05 },
        { price: calculateUpgradePrice(50, 4), bonus: 0.1 },
    ],
},
{
    id: "steelSellerSellPrice",
    idNum: 10,
    iconX: 3,
    iconY: 0,
    requiresResearch: "steelComponents",
    type: "sellerSellPrice",
    componentId: "steelSeller",
    levels: [
        { price: calculateUpgradePrice(9, 4), bonus: 0.1 },
        { price: calculateUpgradePrice(4, 5), bonus: 0.1 },
    ],
},
{
    id: "oilBuyerBuyAmount",
    idNum: 12,
    iconX: 0,
    iconY: 0,
    requiresResearch: "plasticComponents",
    type: "buyer",
    componentId: "oilBuyer",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(9, 5), bonus: 1 },
        { price: calculateUpgradePrice(3, 8), bonus: 6 },
        { price: calculateUpgradePrice(4, 9), bonus: 4 },
        { price: calculateUpgradePrice(3, 11), bonus: 12 },
    ],
},
{
    id: "gasBuyerBuyAmount",
    idNum: 14,
    iconX: 0,
    iconY: 0,
    requiresResearch: "plasticComponents",
    type: "buyer",
    componentId: "gasBuyer",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(1.2, 6), bonus: 1 },
        { price: calculateUpgradePrice(4, 8), bonus: 2 },
        { price: calculateUpgradePrice(8, 8), bonus: 4 },
        { price: calculateUpgradePrice(2, 9), bonus: 4 },
        { price: calculateUpgradePrice(2, 11), bonus: 12 },
    ],
},
{
    id: "plasticMakerConvertAmount",
    idNum: 16,
    iconX: 1,
    iconY: 0,
    requiresResearch: "plasticComponents",
    type: "converter",
    componentId: "plasticMaker",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(12, 6), bonus: 1 },
        { price: calculateUpgradePrice(5, 9), bonus: 1 },
        { price: calculateUpgradePrice(6, 11), bonus: 3 },
    ],
},
{
    id: "plasticMakerConvertMoreAmount",
    idNum: 63,
    iconX: 1,
    iconY: 0,
    requiresResearch: "engineComponents",
    type: "converterProduceMore",
    componentId: "plasticMaker",
    refund: 0.8,
    levels: [{ price: calculateUpgradePrice(1, 12), bonus: 1 }],
},
{
    id: "plasticSellerSellAmount",
    idNum: 18,
    iconX: 2,
    iconY: 0,
    requiresResearch: "plasticComponents",
    type: "sellerSellAmount",
    componentId: "plasticSeller",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(1.2, 7), bonus: 3 },
        { price: calculateUpgradePrice(9.5, 9), bonus: 2 },
    ],
},
{
    id: "oilBuyerRunningCost",
    idNum: 13,
    iconX: 4,
    iconY: 0,
    requiresResearch: "plasticComponents",
    type: "runningCost",
    componentId: "oilBuyer",
    levels: [
        { price: calculateUpgradePrice(6, 5), bonus: 0.05 },
        { price: calculateUpgradePrice(5, 8), bonus: 0.05 },
    ],
},
{
    id: "gasBuyerRunningCost",
    idNum: 15,
    iconX: 4,
    iconY: 0,
    requiresResearch: "plasticComponents",
    type: "runningCost",
    componentId: "gasBuyer",
    levels: [
        { price: calculateUpgradePrice(4, 5), bonus: 0.05 },
        { price: calculateUpgradePrice(1, 8), bonus: 0.1 },
    ],
},
{
    id: "plasticMakerRunningCost",
    idNum: 17,
    iconX: 4,
    iconY: 0,
    requiresResearch: "plasticComponents",
    type: "runningCost",
    componentId: "plasticMaker",
    levels: [
        { price: calculateUpgradePrice(9, 5), bonus: 0.05 },
        { price: calculateUpgradePrice(6, 8), bonus: 0.1 },
    ],
},
{
    id: "plasticSellerRunningCost",
    idNum: 20,
    iconX: 4,
    iconY: 0,
    requiresResearch: "plasticComponents",
    type: "runningCost",
    componentId: "plasticSeller",
    levels: [
        { price: calculateUpgradePrice(7, 5), bonus: 0.05 },
        { price: calculateUpgradePrice(3, 8), bonus: 0.05 },
    ],
},
{
    id: "plasticSellerSellPrice",
    idNum: 19,
    iconX: 3,
    iconY: 0,
    requiresResearch: "plasticComponents",
    type: "sellerSellPrice",
    componentId: "plasticSeller",
    levels: [
        { price: calculateUpgradePrice(9, 6), bonus: 0.1 },
        { price: calculateUpgradePrice(1, 9), bonus: 0.05 },
    ],
},
{
    id: "siliconBuyerBuyAmount",
    idNum: 21,
    iconX: 0,
    iconY: 0,
    requiresResearch: "electronicsComponents",
    type: "buyer",
    componentId: "siliconBuyer",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(8, 8), bonus: 1 },
        { price: calculateUpgradePrice(1, 9), bonus: 1 },
        { price: calculateUpgradePrice(5, 11), bonus: 3 },
        { price: calculateUpgradePrice(3, 13), bonus: 6 },
    ],
},
{
    id: "electronicsMakerConvertAmount",
    idNum: 23,
    iconX: 1,
    iconY: 0,
    requiresResearch: "electronicsComponents",
    type: "converter",
    componentId: "electronicsMaker",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(4, 8), bonus: 1 },
        { price: calculateUpgradePrice(3, 9), bonus: 1 },
    ],
},
{
    id: "electronicsMakerConvertMoreAmount",
    idNum: 65,
    iconX: 1,
    iconY: 0,
    requiresResearch: "engineComponents",
    type: "converterProduceMore",
    componentId: "electronicsMaker",
    refund: 0.8,
    levels: [{ price: calculateUpgradePrice(1.5, 12), bonus: 1 }],
},
{
    id: "electronicsSellerSellAmount",
    idNum: 25,
    iconX: 2,
    iconY: 0,
    requiresResearch: "electronicsComponents",
    type: "sellerSellAmount",
    componentId: "electronicsSeller",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(2, 8), bonus: 1 },
        { price: calculateUpgradePrice(2, 9), bonus: 1 },
    ],
},
{ id: "siliconBuyerRunningCost", idNum: 22, iconX: 4, iconY: 0, requiresResearch: "electronicsComponents", type: "runningCost", componentId: "siliconBuyer", levels: [{ price: calculateUpgradePrice(8, 8), bonus: 0.05 }] },
{ id: "electronicsMakerRunningCost", idNum: 24, iconX: 4, iconY: 0, requiresResearch: "electronicsComponents", type: "runningCost", componentId: "electronicsMaker", levels: [{ price: calculateUpgradePrice(8, 8), bonus: 0.05 }] },
{ id: "electronicsSellerRunningCost", idNum: 26, iconX: 4, iconY: 0, requiresResearch: "electronicsComponents", type: "runningCost", componentId: "electronicsSeller", levels: [{ price: calculateUpgradePrice(12, 8), bonus: 0.05 }] },
{
    id: "electronicsSellerSellPrice",
    idNum: 27,
    iconX: 3,
    iconY: 0,
    requiresResearch: "electronicsComponents",
    type: "sellerSellPrice",
    componentId: "electronicsSeller",
    levels: [
        { price: calculateUpgradePrice(2, 8), bonus: 0.05 },
        { price: calculateUpgradePrice(4, 8), bonus: 0.05 },
        { price: calculateUpgradePrice(6, 8), bonus: 0.05 },
        { price: calculateUpgradePrice(1, 10), bonus: 0.05 },
    ],
},
{
    id: "explosivesBuyerBuyAmount",
    idNum: 35,
    iconX: 0,
    iconY: 0,
    requiresResearch: "gunComponents",
    type: "buyer",
    componentId: "explosivesBuyer",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(99, 9), bonus: 1 },
        { price: calculateUpgradePrice(500, 9), bonus: 2 },
        { price: calculateUpgradePrice(80, 13), bonus: 4 },
        { price: calculateUpgradePrice(120, 14), bonus: 8 },
    ],
},
{
    id: "bulletMakerConvertAmount",
    idNum: 37,
    iconX: 1,
    iconY: 0,
    requiresResearch: "gunComponents",
    type: "converter",
    componentId: "bulletMaker",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(220, 9), bonus: 1 },
        { price: calculateUpgradePrice(600, 9), bonus: 2 },
        { price: calculateUpgradePrice(35, 13), bonus: 4 },
    ],
},
{
    id: "gunMakerConvertAmount",
    idNum: 39,
    iconX: 1,
    iconY: 0,
    requiresResearch: "gunComponents",
    type: "converter",
    componentId: "gunMaker",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(450, 9), bonus: 1 },
        { price: calculateUpgradePrice(250, 10), bonus: 6 },
        { price: calculateUpgradePrice(90, 13), bonus: 8 },
    ],
},
{ id: "gunSellerSellAmount", idNum: 41, iconX: 2, iconY: 0, requiresResearch: "gunComponents", type: "sellerSellAmount", componentId: "gunSeller", refund: 0.8, levels: [{ price: calculateUpgradePrice(120, 9), bonus: 1 }] },
{ id: "explosivesBuyerRunningCost", idNum: 36, iconX: 4, iconY: 0, requiresResearch: "gunComponents", type: "runningCost", componentId: "explosivesBuyer", levels: [{ price: calculateUpgradePrice(15, 9), bonus: 0.05 }] },
{ id: "bulletMakerRunningCost", idNum: 38, iconX: 4, iconY: 0, requiresResearch: "gunComponents", type: "runningCost", componentId: "bulletMaker", levels: [{ price: calculateUpgradePrice(20, 9), bonus: 0.1 }] },
{ id: "gunMakerRunningCost", idNum: 40, iconX: 4, iconY: 0, requiresResearch: "gunComponents", type: "runningCost", componentId: "gunMaker", levels: [{ price: calculateUpgradePrice(25, 9), bonus: 0.1 }] },
{ id: "gunSellerRunningCost", idNum: 42, iconX: 4, iconY: 0, requiresResearch: "gunComponents", type: "runningCost", componentId: "gunSeller", levels: [{ price: calculateUpgradePrice(15, 9), bonus: 0.1 }] },
{ id: "gunSellerSellPrice", idNum: 43, iconX: 3, iconY: 0, requiresResearch: "gunComponents", type: "sellerSellPrice", componentId: "gunSeller", levels: [{ price: calculateUpgradePrice(15, 9), bonus: 0.05 }] },
{
    id: "aluminiumBuyerBuyAmount",
    idNum: 28,
    iconX: 0,
    iconY: 0,
    requiresResearch: "engineComponents",
    type: "buyer",
    componentId: "aluminiumBuyer",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(300, 9), bonus: 1 },
        { price: calculateUpgradePrice(600, 9), bonus: 2 },
        { price: calculateUpgradePrice(150, 10), bonus: 4 },
        { price: calculateUpgradePrice(1, 14), bonus: 24 },
        { price: calculateUpgradePrice(60, 14), bonus: 32 },
    ],
},
{
    id: "engineMakerConvertAmount",
    idNum: 30,
    iconX: 1,
    iconY: 0,
    requiresResearch: "engineComponents",
    type: "converter",
    componentId: "engineMaker",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(1300, 9), bonus: 1 },
        { price: calculateUpgradePrice(40, 14), bonus: 2 },
    ],
},
{ id: "engineSellerSellAmount", idNum: 32, iconX: 2, iconY: 0, requiresResearch: "engineComponents", type: "sellerSellAmount", componentId: "engineSeller", refund: 0.8, levels: [{ price: calculateUpgradePrice(800, 9), bonus: 1 }] },
{
    id: "aluminiumBuyerRunningCost",
    idNum: 29,
    iconX: 4,
    iconY: 0,
    requiresResearch: "engineComponents",
    type: "runningCost",
    componentId: "aluminiumBuyer",
    levels: [
        { price: calculateUpgradePrice(150, 9), bonus: 0.05 },
        { price: calculateUpgradePrice(450, 9), bonus: 0.05 },
    ],
},
{
    id: "engineMakerRunningCost",
    idNum: 31,
    iconX: 4,
    iconY: 0,
    requiresResearch: "engineComponents",
    type: "runningCost",
    componentId: "engineMaker",
    levels: [
        { price: calculateUpgradePrice(100, 9), bonus: 0.1 },
        { price: calculateUpgradePrice(200, 9), bonus: 0.1 },
    ],
},
{
    id: "engineSellerRunningCost",
    idNum: 33,
    iconX: 4,
    iconY: 0,
    requiresResearch: "engineComponents",
    type: "runningCost",
    componentId: "engineSeller",
    levels: [
        { price: calculateUpgradePrice(50, 9), bonus: 0.1 },
        { price: calculateUpgradePrice(150, 9), bonus: 0.1 },
    ],
},
{
    id: "engineSellerSellPrice",
    idNum: 34,
    iconX: 3,
    iconY: 0,
    requiresResearch: "engineComponents",
    type: "sellerSellPrice",
    componentId: "engineSeller",
    levels: [
        { price: calculateUpgradePrice(150, 9), bonus: 0.05 },
        { price: calculateUpgradePrice(250, 9), bonus: 0.05 },
        { price: calculateUpgradePrice(450, 9), bonus: 0.05 },
    ],
},
{
    id: "tankHullMakerConvertAmount",
    idNum: 44,
    iconX: 1,
    iconY: 0,
    requiresResearch: "tankComponents",
    type: "converter",
    componentId: "tankHullMaker",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(600, 9), bonus: 3 },
        { price: calculateUpgradePrice(150, 10), bonus: 4 },
    ],
},
{
    id: "tankTurretMakerConvertAmount",
    idNum: 46,
    iconX: 1,
    iconY: 0,
    requiresResearch: "tankComponents",
    type: "converter",
    componentId: "tankTurretMaker",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(450, 9), bonus: 3 },
        { price: calculateUpgradePrice(100, 10), bonus: 4 },
    ],
},
{
    id: "tankAssemblerConvertAmount",
    idNum: 48,
    iconX: 1,
    iconY: 0,
    requiresResearch: "tankComponents",
    type: "converter",
    componentId: "tankAssembler",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(300, 9), bonus: 1 },
        { price: calculateUpgradePrice(200, 10), bonus: 2 },
    ],
},
{
    id: "tankSellerSellAmount",
    idNum: 50,
    iconX: 2,
    iconY: 0,
    requiresResearch: "tankComponents",
    type: "sellerSellAmount",
    componentId: "tankSeller",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(400, 9), bonus: 3 },
        { price: calculateUpgradePrice(620, 10), bonus: 4 },
    ],
},
{
    id: "tankHullMakerRunningCost",
    idNum: 45,
    iconX: 4,
    iconY: 0,
    requiresResearch: "tankComponents",
    type: "runningCost",
    componentId: "tankHullMaker",
    levels: [
        { price: calculateUpgradePrice(400, 9), bonus: 0.05 },
        { price: calculateUpgradePrice(200, 10), bonus: 0.05 },
    ],
},
{
    id: "tankTurretMakerRunningCost",
    idNum: 47,
    iconX: 4,
    iconY: 0,
    requiresResearch: "tankComponents",
    type: "runningCost",
    componentId: "tankTurretMaker",
    levels: [
        { price: calculateUpgradePrice(300, 9), bonus: 0.05 },
        { price: calculateUpgradePrice(200, 10), bonus: 0.05 },
    ],
},
{
    id: "tankAssemblerRunningCost",
    idNum: 49,
    iconX: 4,
    iconY: 0,
    requiresResearch: "tankComponents",
    type: "runningCost",
    componentId: "tankAssembler",
    levels: [
        { price: calculateUpgradePrice(500, 9), bonus: 0.05 },
        { price: calculateUpgradePrice(100, 10), bonus: 0.05 },
    ],
},
{
    id: "tankSellerRunningCost",
    idNum: 51,
    iconX: 4,
    iconY: 0,
    requiresResearch: "tankComponents",
    type: "runningCost",
    componentId: "tankSeller",
    levels: [
        { price: calculateUpgradePrice(350, 9), bonus: 0.05 },
        { price: calculateUpgradePrice(150, 10), bonus: 0.05 },
    ],
},
{
    id: "tankSellerSellPrice",
    idNum: 52,
    iconX: 3,
    iconY: 0,
    requiresResearch: "tankComponents",
    type: "sellerSellPrice",
    componentId: "tankSeller",
    levels: [
        { price: calculateUpgradePrice(400, 9), bonus: 0.1 },
        { price: calculateUpgradePrice(240, 10), bonus: 0.1 },
    ],
},
{ id: "dieselRefineryConvertAmount", idNum: 53, iconX: 1, iconY: 0, requiresResearch: "dieselRefinery", type: "converter", componentId: "dieselRefinery", refund: 0.8, levels: [{ price: calculateUpgradePrice(700, 9), bonus: 1 }] },
{ id: "dieselRefineryRunningCost", idNum: 54, iconX: 4, iconY: 0, requiresResearch: "dieselRefinery", type: "runningCost", componentId: "dieselRefinery", levels: [{ price: calculateUpgradePrice(900, 9), bonus: 0.05 }] },
{ id: "jetFuelRefineryConvertAmount", idNum: 55, iconX: 1, iconY: 0, requiresResearch: "rocketComponents", type: "converter", componentId: "jetFuelRefinery", refund: 0.8, levels: [{ price: calculateUpgradePrice(100, 10), bonus: 1 }] },
{ id: "rocketHullMakerConvertAmount", idNum: 57, iconX: 1, iconY: 0, requiresResearch: "rocketComponents", type: "converter", componentId: "rocketHullMaker", refund: 0.8, levels: [{ price: calculateUpgradePrice(150, 10), bonus: 1 }] },
{
    id: "rocketWarheadMakerConvertAmount",
    idNum: 59,
    iconX: 1,
    iconY: 0,
    requiresResearch: "rocketComponents",
    type: "converter",
    componentId: "rocketWarheadMaker",
    refund: 0.8,
    levels: [{ price: calculateUpgradePrice(200, 10), bonus: 1 }],
},
{ id: "rocketAssemblerConvertAmount", idNum: 61, iconX: 1, iconY: 0, requiresResearch: "rocketComponents", type: "converter", componentId: "rocketAssembler", refund: 0.8, levels: [{ price: calculateUpgradePrice(250, 10), bonus: 1 }] },
{ id: "jetFuelRefineryRunningCost", idNum: 56, iconX: 4, iconY: 0, requiresResearch: "rocketComponents", type: "runningCost", componentId: "jetFuelRefinery", levels: [{ price: calculateUpgradePrice(300, 10), bonus: 0.05 }] },
{ id: "rocketHullMakerRunningCost", idNum: 58, iconX: 4, iconY: 0, requiresResearch: "rocketComponents", type: "runningCost", componentId: "rocketHullMaker", levels: [{ price: calculateUpgradePrice(350, 10), bonus: 0.05 }] },
{ id: "rocketWarheadMakerRunningCost", idNum: 60, iconX: 4, iconY: 0, requiresResearch: "rocketComponents", type: "runningCost", componentId: "rocketWarheadMaker", levels: [{ price: calculateUpgradePrice(250, 10), bonus: 0.05 }] },
{ id: "rocketAssemblerRunningCost", idNum: 62, iconX: 4, iconY: 0, requiresResearch: "rocketComponents", type: "runningCost", componentId: "rocketAssembler", levels: [{ price: calculateUpgradePrice(300, 10), bonus: 0.05 }] },
{
    id: "garbageRemoveAmount",
    idNum: 99,
    iconX: 5,
    iconY: 0,
    description: "",
    requiresResearch: "metalsLab",
    type: "garbage",
    componentId: "garbageCollector",
    levels: [
        { price: calculateUpgradePrice(5, 4), bonus: 1 },
        { price: calculateUpgradePrice(3, 9), bonus: 2 },
    ],
},
{
    id: "researchCenterBonus",
    idNum: 100,
    iconX: 6,
    iconY: 0,
    description: "researchCenter",
    requiresResearch: "metalsLab",
    type: "researchCenterBonus",
    componentId: "researchCenter",
    levels: [
        { price: calculateUpgradePrice(5, 5), bonus: 0.1 },
        { price: calculateUpgradePrice(5, 7), bonus: 0.2 },
        { price: calculateUpgradePrice(5, 8), bonus: 0.2 },
        { price: calculateUpgradePrice(1.1, 10), bonus: 0.25 },
        { price: calculateUpgradePrice(2.8, 10), bonus: 0.25 },
        { price: calculateUpgradePrice(1.2, 11), bonus: 0.5 },
        { price: calculateUpgradePrice(9.4, 11), bonus: 0.5 },
        { price: calculateUpgradePrice(200, 12), bonus: 1.5 },
        { price: calculateUpgradePrice(100, 13), bonus: 1.5 },
        { price: calculateUpgradePrice(10, 14), bonus: 6 },
    ],
},
{
    id: "researchCenterMaxStock",
    idNum: 101,
    iconX: 7,
    iconY: 0,
    description: "Research center max papers",
    requiresResearch: "metalsLab",
    type: "researchCenterMaxStock",
    componentId: "researchCenter",
    levels: [
        { price: calculateUpgradePrice(5, 5), bonus: 1 },
        { price: calculateUpgradePrice(1, 8), bonus: 1 },
        { price: calculateUpgradePrice(1, 9), bonus: 1 },
        { price: calculateUpgradePrice(3, 9), bonus: 2 },
        { price: calculateUpgradePrice(9, 9), bonus: 2 },
        { price: calculateUpgradePrice(4, 11), bonus: 4 },
        { price: calculateUpgradePrice(5, 13), bonus: 3 },
        { price: calculateUpgradePrice(6, 14), bonus: 5 },
    ],
},
{
    id: "analystCenterConvertMore",
    idNum: 102,
    iconX: 1,
    iconY: 0,
    requiresResearch: "engineComponents",
    type: "converterProduceMore",
    componentId: "analystCenter",
    refund: 0.8,
    levels: [
        { price: calculateUpgradePrice(2, 11), bonus: 1 },
        { price: calculateUpgradePrice(400, 13), bonus: 2 },
    ],
}
]
};

// Helper functions to get upgrade information
export function getUpgradeLayout() {
  return upgrades.layout;
}

export function getUpgradeById(upgradeId) {
  return upgrades.upgrades.find(upgrade => upgrade.id === upgradeId);
}

export function getUpgradesByComponent(componentId) {
  return upgrades.upgrades.filter(upgrade => upgrade.componentId === componentId);
}

export function getUpgradesByType(type) {
  return upgrades.upgrades.filter(upgrade => upgrade.type === type);
}

export function getUpgradesByResearch(researchId) {
  return upgrades.upgrades.filter(upgrade => upgrade.requiresResearch === researchId);
}

export default upgrades;
